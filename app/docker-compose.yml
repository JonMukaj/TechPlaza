version: "3.8"
services:
  postgres:
    image: postgres:14.7-alpine
    container_name: postgres-db
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
    # volumes:
    #     - /data/volumes/myproject/my_db:/var/lib/postgresql/data/
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
      
  # pgadmin:
  #   image: dpage/pgadmin4:3.5
  #   container_name: pgadmin
  #   volumes:
  #     - ./server/servers.json:/pgadmin4/servers.json
  #   ports:
  #     - 8080:80
  #   environment:
  #     - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
  #     - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
  #     - PGADMIN_CONFIG_SERVER_MODE='False'
  #   deploy:
  #     restart_policy:
  #       condition: on-failure
  #       max_attempts: 3

  react:
    build: 
      context: ./client
      dockerfile: Dockerfile.dev
    container_name: frontend
    volumes:
      - ./client:/client
      - /client/node_modules
    ports:
      - 3000:3000
    environment:
      - NODE_ENV=development
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3

  express:
    build:
        context: ./server
        dockerfile: Dockerfile.dev
    container_name: backend
    volumes:
      - ./server:/server
      - /server/node_modules
    ports:
      - 5000:5000
    environment:
      - NODE_ENV=development
    depends_on:
      - postgres
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3